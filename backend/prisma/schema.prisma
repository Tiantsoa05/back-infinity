// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Langue {
  id          Int      @id @default(autoincrement())
  nom_langue  String
  professeurs  Professeur[]
}

model Professeur {
  id          Int      @id @default(autoincrement())
  nom         String
  prenoms     String
  mail_prof    String
  id_langue    Int
  langue      Langue    @relation(fields: [id_langue], references: [id])
  cours       Cours[]
  groupe      Groupe[]
  payment     Payment[]
}

model Niveau{
  id          Int      @id @default(autoincrement())
  nom_niveau  String
  cours       Cours[]
  groupe      Groupe[]
}

model Groupe {
  id              Int      @id @default(autoincrement())
  nom_groupe      String
  id_niveau       Int
  id_professeur   Int
  professeur      Professeur   @relation(fields: [id_professeur], references: [id])
  niveau          Niveau       @relation(fields: [id_niveau], references: [id])
}

model Cours {
  id              Int      @id @default(autoincrement())
  nom_cours       String
  date_debut      DateTime
  date_fin        DateTime
  id_professeur   Int
  professeur      Professeur   @relation(fields: [id_professeur], references: [id])
  id_niveau       Int
  niveau          Niveau       @relation(fields: [id_niveau], references: [id])
}

model Etudiant {
  id              Int      @id @default(autoincrement())
  nom             String
  prenoms         String
  mail_etudiant  String
  motDePasse       String
  id_groupe       Int?
  id_professeur   Int
  payments   Payment[]
}

model Payment {
  id             Int       @id @default(autoincrement())
  montant        Float    
  date           DateTime  @default(now())  

  id_etudiant    Int       
  etudiant       Etudiant  @relation(fields: [id_etudiant], references: [id])

  id_professeur  Int      
  professeur       Professeur @relation(fields: [id_professeur], references: [id])
}